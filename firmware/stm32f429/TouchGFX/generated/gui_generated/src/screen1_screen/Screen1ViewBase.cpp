/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &Screen1ViewBase::sliderValueChangedCallbackHandler)
{
    background.setBitmap(touchgfx::Bitmap(BITMAP_BG2_ID));
    background.setPosition(0, 0, 240, 320);
    background.setOffset(0, 0);

    mainPage.setXY(0, 0);

    logPanel.setWidth(240);
    logPanel.setHeight(320);

    logTitle.setXY(85, 40);
    logTitle.setColor(touchgfx::Color::getColorFrom24BitRGB(44, 62, 80));
    logTitle.setLinespacing(0);
    logTitle.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));
    logPanel.add(logTitle);

    boxWithBorder1.setPosition(20, 120, 200, 180);
    boxWithBorder1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(149, 165, 166));
    boxWithBorder1.setBorderSize(5);
    boxWithBorder1.setAlpha(127);
    logPanel.add(boxWithBorder1);

    scrollableContainer1.setPosition(25, 125, 190, 170);
    scrollableContainer1.setScrollbarsColor(touchgfx::Color::getColorFrom24BitRGB(0, 128, 255));

    logContent.setPosition(0, 0, 190, 1000);
    logContent.setColor(touchgfx::Color::getColorFrom24BitRGB(44, 62, 80));
    logContent.setLinespacing(0);
    Unicode::snprintf(logContentBuffer, LOGCONTENT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID15).getText());
    logContent.setWildcard(logContentBuffer);
    logContent.setTypedText(touchgfx::TypedText(T_SINGLEUSEID10));
    scrollableContainer1.add(logContent);

    clearButton.setXY(10, 960);
    clearButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    clearButton.setLabelText(touchgfx::TypedText(T_SINGLEUSEID30));
    clearButton.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    clearButton.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    clearButton.setAction(buttonCallback);
    scrollableContainer1.add(clearButton);
    scrollableContainer1.setScrollbarsPermanentlyVisible();
    logPanel.add(scrollableContainer1);
    mainPage.add(logPanel);

    controlPanel.setWidth(240);
    controlPanel.setHeight(320);

    contolTitle.setXY(47, 40);
    contolTitle.setColor(touchgfx::Color::getColorFrom24BitRGB(44, 62, 80));
    contolTitle.setLinespacing(0);
    contolTitle.setTypedText(touchgfx::TypedText(T_SINGLEUSEID8));
    controlPanel.add(contolTitle);

    vibSlider.setXY(45, 240);
    vibSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
    vibSlider.setupHorizontalSlider(3, 7, 0, 0, 125);
    vibSlider.setValueRange(0, 1024);
    vibSlider.setValue(0);
    vibSlider.setNewValueCallback(sliderValueChangedCallback);
    controlPanel.add(vibSlider);

    blueSlider.setXY(45, 200);
    blueSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
    blueSlider.setupHorizontalSlider(3, 7, 0, 0, 125);
    blueSlider.setValueRange(0, 1024);
    blueSlider.setValue(0);
    blueSlider.setNewValueCallback(sliderValueChangedCallback);
    controlPanel.add(blueSlider);

    greenSlider.setXY(45, 160);
    greenSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
    greenSlider.setupHorizontalSlider(3, 7, 0, 0, 125);
    greenSlider.setValueRange(0, 1024);
    greenSlider.setValue(0);
    greenSlider.setNewValueCallback(sliderValueChangedCallback);
    controlPanel.add(greenSlider);

    redSlider.setXY(45, 120);
    redSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
    redSlider.setupHorizontalSlider(3, 7, 0, 0, 125);
    redSlider.setValueRange(0, 1024);
    redSlider.setValue(0);
    redSlider.setNewValueCallback(sliderValueChangedCallback);
    controlPanel.add(redSlider);

    vibText.setXY(16, 245);
    vibText.setColor(touchgfx::Color::getColorFrom24BitRGB(44, 62, 80));
    vibText.setLinespacing(0);
    vibText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID11));
    controlPanel.add(vibText);

    blueText.setXY(16, 205);
    blueText.setColor(touchgfx::Color::getColorFrom24BitRGB(44, 62, 80));
    blueText.setLinespacing(0);
    blueText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID12));
    controlPanel.add(blueText);

    greenText.setXY(16, 165);
    greenText.setColor(touchgfx::Color::getColorFrom24BitRGB(44, 62, 80));
    greenText.setLinespacing(0);
    greenText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID13));
    controlPanel.add(greenText);

    redText.setXY(16, 125);
    redText.setColor(touchgfx::Color::getColorFrom24BitRGB(44, 62, 80));
    redText.setLinespacing(0);
    redText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID14));
    controlPanel.add(redText);
    mainPage.add(controlPanel);

    statusPanel.setWidth(240);
    statusPanel.setHeight(320);

    autoModeButton.setXY(90, 118);
    autoModeButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_RE_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_RE_LARGE_BUTTON_ON_ID));
    autoModeButton.setAction(buttonCallback);
    statusPanel.add(autoModeButton);

    statusTitle.setXY(56, 40);
    statusTitle.setColor(touchgfx::Color::getColorFrom24BitRGB(44, 62, 80));
    statusTitle.setLinespacing(0);
    statusTitle.setTypedText(touchgfx::TypedText(T_SINGLEUSEID16));
    statusPanel.add(statusTitle);

    ambiText.setXY(38, 255);
    ambiText.setColor(touchgfx::Color::getColorFrom24BitRGB(44, 62, 80));
    ambiText.setLinespacing(0);
    ambiText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID17));
    statusPanel.add(ambiText);

    humiText.setXY(38, 215);
    humiText.setColor(touchgfx::Color::getColorFrom24BitRGB(44, 62, 80));
    humiText.setLinespacing(0);
    humiText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID18));
    statusPanel.add(humiText);

    tempText.setXY(38, 175);
    tempText.setColor(touchgfx::Color::getColorFrom24BitRGB(44, 62, 80));
    tempText.setLinespacing(0);
    tempText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID19));
    statusPanel.add(tempText);

    modeText.setXY(30, 125);
    modeText.setColor(touchgfx::Color::getColorFrom24BitRGB(44, 62, 80));
    modeText.setLinespacing(0);
    modeText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID23));
    statusPanel.add(modeText);

    ambiBgBar.setXY(118, 250);
    ambiBgBar.setProgressIndicatorPosition(2, 2, 80, 30);
    ambiBgBar.setRange(0, 100);
    ambiBgBar.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    ambiBgBar.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_TEXT_PROGRESS_BG_SQUARE_ID));
    ambiBgBar.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 234, 167));
    ambiBgBar.setValue(60);
    statusPanel.add(ambiBgBar);

    humiBgBar.setXY(118, 210);
    humiBgBar.setProgressIndicatorPosition(2, 2, 80, 30);
    humiBgBar.setRange(0, 100);
    humiBgBar.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    humiBgBar.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_TEXT_PROGRESS_BG_SQUARE_ID));
    humiBgBar.setColor(touchgfx::Color::getColorFrom24BitRGB(85, 239, 196));
    humiBgBar.setValue(60);
    statusPanel.add(humiBgBar);

    tempBgBar.setXY(118, 170);
    tempBgBar.setProgressIndicatorPosition(2, 2, 80, 30);
    tempBgBar.setRange(0, 100);
    tempBgBar.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    tempBgBar.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_TEXT_PROGRESS_BG_SQUARE_ID));
    tempBgBar.setColor(touchgfx::Color::getColorFrom24BitRGB(250, 177, 160));
    tempBgBar.setValue(60);
    statusPanel.add(tempBgBar);

    ambiVal.setPosition(118, 255, 84, 25);
    ambiVal.setColor(touchgfx::Color::getColorFrom24BitRGB(44, 62, 80));
    ambiVal.setLinespacing(0);
    Unicode::snprintf(ambiValBuffer, AMBIVAL_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID27).getText());
    ambiVal.setWildcard(ambiValBuffer);
    ambiVal.setTypedText(touchgfx::TypedText(T_SINGLEUSEID26));
    statusPanel.add(ambiVal);

    humiVal.setPosition(118, 215, 84, 25);
    humiVal.setColor(touchgfx::Color::getColorFrom24BitRGB(44, 62, 80));
    humiVal.setLinespacing(0);
    Unicode::snprintf(humiValBuffer, HUMIVAL_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID29).getText());
    humiVal.setWildcard(humiValBuffer);
    humiVal.setTypedText(touchgfx::TypedText(T_SINGLEUSEID28));
    statusPanel.add(humiVal);

    tempVal.setPosition(118, 175, 84, 25);
    tempVal.setColor(touchgfx::Color::getColorFrom24BitRGB(44, 62, 80));
    tempVal.setLinespacing(0);
    Unicode::snprintf(tempValBuffer, TEMPVAL_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID25).getText());
    tempVal.setWildcard(tempValBuffer);
    tempVal.setTypedText(touchgfx::TypedText(T_SINGLEUSEID24));
    statusPanel.add(tempVal);
    mainPage.add(statusPanel);

    mainPage.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_BLUE_PAGEINDICATOR_DOT_INDICATOR_SMALL_NORMAL_ID), touchgfx::Bitmap(BITMAP_BLUE_PAGEINDICATOR_DOT_INDICATOR_SMALL_HIGHLIGHT_ID));
    mainPage.setPageIndicatorXY(98, 0);
    mainPage.setSwipeCutoff(50);
    mainPage.setEndSwipeElasticWidth(50);
    mainPage.setSelectedPage(2);

    add(background);
    add(mainPage);
}

void Screen1ViewBase::setupScreen()
{

}

//Called when the screen is done with transition/load
void Screen1ViewBase::afterTransition()
{
    //enterScreen
    //When screen is entered call virtual function
    //Call on_enter_screen
    on_enter_screen();
}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &clearButton)
    {
        //clearLog
        //When clearButton clicked call virtual function
        //Call on_click_clear_button
        on_click_clear_button();
    }
    else if (&src == &autoModeButton)
    {
        //switchMode
        //When autoModeButton clicked call virtual function
        //Call on_click_mode
        on_click_mode();
    }
}

void Screen1ViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &vibSlider)
    {
        //changeV
        //When vibSlider value changed call virtual function
        //Call on_change_V
        on_change_V(value);
    }
    else if (&src == &blueSlider)
    {
        //changeB
        //When blueSlider value changed call virtual function
        //Call on_change_B
        on_change_B(value);
    }
    else if (&src == &greenSlider)
    {
        //changeG
        //When greenSlider value changed call virtual function
        //Call on_change_G
        on_change_G(value);
    }
    else if (&src == &redSlider)
    {
        //changeR
        //When redSlider value changed call virtual function
        //Call on_change_R
        on_change_R(value);
    }
}
